{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema) %}
<nav class="large-3 medium-4 columns" id="actions-sidebar">
    <ul class="side-nav">
        <li class="heading"><?= __('Actions') ?></li>
{% if action|strpos('add') is false) }}
        <li><?= $this->Form->postLink(
                __('Delete'),
                ['action' => 'delete', ${{ singularVar }}->{{ primaryKey.0 }}],
                ['confirm' => __('Are you sure you want to delete # {0}?', ${{ singularVar }}->{{ primaryKey.0 }})]
            )
        ?></li>
{{ endif }}
        <li><?= $this->Html->link(__('List {{ pluralHumanName }}'), ['action' => 'index']) ?></li>
{% set done = [] %}
{% for type, data in associations %}
{% for alias, details in data %}
{% if details.controller != _view.name && done not in details.controller %}
        <li><?= $this->Html->link(__('List {{ _view._pluralHumanName(alias) }}'), ['controller' => '{{ details.controller }}', 'action' => 'index']) ?></li>
        <li><?= $this->Html->link(__('New {{ _view._singularHumanName(alias) }}'), ['controller' => '{{ details.controller }}', 'action' => 'add']) ?></li>
{% done|push(details.controller) %}
{% endif %}
{% endfor %}
{% endfor %}
    </ul>
</nav>
<div class="{{ pluralVar }} form large-9 medium-8 columns content">
    <?= $this->Form->create(${{ singularVar }}) ?>
    <fieldset>
        <legend><?= __('{{ action|humanize }} {{ singularHumanName }}') ?></legend>
        <?php
{% for field in fields if field in primaryKey %}
{% if keyFields.field %}
{% set fieldData = Bake.columnData(field, schema) %}
{% if fieldData.null %}
            echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields.field }}, 'empty' => true]);
{% else %}
            echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields.field }}]);
{% endif %}
{% elseif field in ['created', 'modified', 'updated'] %}
{% set fieldData = Bake.columnData(field, schema) %}
{% if fieldData.type|in_array(['date', 'datetime', 'time']) and fieldData.null %}
            echo $this->Form->control('{{ field }}', ['empty' => true]);
{% else %}
            echo $this->Form->control('{{ field }}');
{% endif %}
{% endif %}
{% endfor %}
{% if associations.BelongsToMany %}
{% for assocName, assocData in associations.BelongsToMany %}
            echo $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}]);
{% endfor %}
{% endif %}
        ?>
    </fieldset>
    <?= $this->Form->button(__('Submit')) ?>
    <?= $this->Form->end() ?>
</div>
